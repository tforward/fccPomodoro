{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/olooElem.js","webpack:///./src/scripts/script.js","webpack:///./src/scripts/olooObserver.js","webpack:///./src/scripts/olooEvent.js","webpack:///./node_modules/tocktimer/tock.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","ElementDelegator","proto","Element","elemId","type","this","elem","document","createElement","id","gc","init","getElementById","console","log","items","forEach","item","initElemObjects","ids","delegator","objs","obj","push","Tock","myBase","myApp","Subscribe","subscribe","addItems","unsubscribe","broadcast","func","args","keys","length","formattedDisplayTime","num","displayTime","getformatSessionLength","upperLimit","limit","lowerLimit","script_reset","timer","beep","pause","currentTime","stop","textContent","start_stop","toggle","action_sym","className","clockDial","posClock","timeLength","final_time","setBreakLength","breakNum","setSessionLength","getBreakLength","parseInt","getSessionLength","clock","session","pos","time","documentElement","style","setProperty","ButtonDelegator","Button","setup","timeMMSS","str","formatted","substring","updateTime","msToTimecode","lap","switchSession","timerLbl","state","initNewTimer","timelength","getTimer","start","play","countdown","interval","callback","complete","initApplication","labels","buttons","btn","eventSandbox","Event","initEvent","eventType","Array","isArray","assign","addEvent","options","boundFunc","boundOptions","addEventListener","removeEvent","removeEventListener","tags","lookupId","target","currentTarget","indexOf","tagName","pathArray","from","path","getTargetId","main","self","numBreak","startTime","timeToMS","onreadystatechange","readyState","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","Date","now","Function","ctx","slice","arguments","fn","apply","_tick","duration_ms","go","clearTimeout","timeout","diff","start_time","next_interval_in","missed_ticks","Math","floor","abs","setTimeout","_startCountdown","duration","_startTimer","start_offset","MILLISECONDS_RE","MM_SS_RE","MM_SS_ms_OR_HH_MM_SS_RE","yyyy_mm_dd_HH_MM_SS_ms_RE","instances","pause_time","reset","msToTime","ms","milliseconds","zeroPad","seconds","input","toString","show_ms","minutes","test","String","time_split","match","date","split","setYear","setMonth","setDate","setHours","setMinutes","setSeconds","setMilliseconds","max","getTime","parse","isNaN"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,KACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,KAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,cAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,YAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,cAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA2B,SAC3B,WAAiC,OAAA3B,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAkB,EAAAC,GAAsD,OAAAlB,OAAAmB,UAAAC,eAAA3B,KAAAwB,EAAAC,IAGtDhC,EAAAmC,EAAA,GAIAnC,IAAAoC,EAAA,cAAAd,EAAAe,EAAAR,GAAA,aC9EA,SAAAS,EAAAC,EAAA,MAGA,MAAAC,EAAA1B,OAAAY,OAAAa,GA0BA,OAxBAC,EAAAd,OAAA,SAAAe,EAAAC,GACAC,KAAAC,KAAAC,SAAAC,cAAAJ,GACAC,KAAAC,KAAAG,GAAAN,EACAE,KAAAI,GAAAN,EACAD,EAAAQ,IAAA,mBAGAR,EAAAS,KAAA,SAAAR,GACAE,KAAAI,GAAAN,EACAE,KAAAC,KAAAC,SAAAK,eAAAP,KAAAI,IACA,OAAAJ,KAAAC,MACAO,QAAAC,uCAAqDT,KAAAI,OAGrDP,EAAAQ,IAAA,mBAGAR,EAAAQ,GAAA,SAAAK,GACAA,EAAAC,QAAAC,WACAf,EAAAe,YAGAf,EAAAQ,IAEAR,EAOA,SAAAgB,EAAAC,EAAAC,EAAAnB,EAAA,MAGA,MAAAoB,KACA,IAAAC,EAUA,OATAH,EAAAH,QAAAP,KAEAa,EADA,OAAArB,EACAmB,IAEAA,EAAAnB,MAEAU,KAAAF,GACAY,EAAAE,KAAAD,KAEAD,ED4BA9B,EAAAX,EAAAmB,GAAAR,EAAA,GE3EA,MAAAiC,EAAA9D,EAAA,GAEA+D,EAAAjD,OAAAY,OAAA,MAEAsC,ECPA,WACA,MAAAC,EAAAnD,OAAAY,OAAA,MA+BA,OA7BAuC,EAAAhB,KAAA,WACAN,KAAAiB,IAAA9C,OAAAY,OAAA,aACAuC,EAAAhB,MAEAgB,EAAAC,UAAA,SAAAX,GACAZ,KAAAiB,IAAAL,EAAAR,IAAAQ,GAGAU,EAAAE,SAAA,SAAAd,GACAA,EAAAC,QAAAC,GAAAU,EAAAC,UAAAX,KAEAU,EAAAG,YAAA,SAAAf,GAEA,oBAAAA,EAAA,CACA,MAAAE,EAAAF,SACAV,KAAAiB,IAAAL,QAEAF,EAAAC,QAAA3B,UAAAgB,KAAAiB,IAAAjC,KAGAsC,EAAAI,UAAA,SAAAC,KAAAC,GAIA,MAAAC,EAAA1D,OAAA0D,KAAA7B,KAAAiB,KACA,QAAAxD,EAAA,EAAmBA,EAAAoE,EAAAC,OAAiBrE,GAAA,EACpCuC,KAAAiB,IAAAY,EAAApE,IAAAkE,MAAAC,IAGAN,EAhCA,GD0DA,SAAAS,EAAAC,GAEAC,EADAC,KAIA,SAAAC,EAAAH,GACA,IAAAI,EAAAJ,EACA,OAAAI,GAAA,GACAA,EAEAA,GAAA,EAIA,SAAAC,EAAAL,GACA,IAAAI,EAAAJ,EACA,OAAAI,GAAA,EACAA,EAEAA,GAAA,EAIA,SAAAE,SACA,IAAAjB,EAAAkB,SAuJA,WACA,MAAAC,EAAAtC,SAAAK,eAAA,QACAiC,EAAAC,QACAD,EAAAE,YAAA,EAHA,GArJArB,EAAAkB,MAAAI,OACAtB,EAAAJ,IAAA,aAAAhB,KAAA2C,YAAAV,IACAb,EAAAJ,IAAA4B,WACAC,QAAA,EACAzB,EAAAJ,IAAA8B,WAAA9C,KAAA+C,UAAA,qBACAC,EAAA,MAkCA,SAAAC,EAAAC,GAMAF,EADA,IADAE,GADAA,EAFA,KAAA9B,EAAAkB,MAAAa,WACA,KAIA,GAGA,SAAAC,EAAAC,GACAjC,EAAAJ,IAAA,gBAAAhB,KAAA2C,YAAAU,EAGA,SAAAC,EAAAvB,GACAX,EAAAJ,IAAA,kBAAAhB,KAAA2C,YAAAZ,EAGA,SAAAwB,IAEA,OADAC,SAAApC,EAAAJ,IAAA,gBAAAhB,KAAA2C,YAAA,IAIA,SAAAc,IAEA,OADAD,SAAApC,EAAAJ,IAAA,kBAAAhB,KAAA2C,YAAA,IAcA,SAAAK,EAAAU,EAAAC,GA0GA,IAAAC,EAKAC,EALAD,EAzGAF,EA2GAzD,SAAA6D,gBAAAC,MAAAC,YAAA,WAAyDJ,SAGzDC,EA7GAF,EA+GA1D,SAAA6D,gBAAAC,MAAAC,YAAA,YAA0DH,MArF1D,SAAAI,EAAAtE,EAAA,MACA,MAAAuE,EAAAhG,OAAAY,OAAAa,GAKA,OAHAuE,EAAAC,MAAA,WACApE,KAAA8C,QAAA,GAEAqB,EAGA,SAAAjC,IAEA,SADAwB,SAIA,SAAAzB,EAAAoC,GACA,MAAAC,KAAiBD,IAEjBE,EADA,QACAC,UAAA,EADA,QACA1C,OAAAwC,EAAAxC,QAAAwC,EACAjD,EAAAJ,IAAA,aAAAhB,KAAA2C,YAAA2B,EAGA,SAAAE,IAGAxC,EAFAZ,EAAAkB,MAAAmC,aAAArD,EAAAkB,MAAAoC,OACAH,UAAA,MAIA,SAAAI,IACA,MAAAC,EAAAxD,EAAAJ,IAAA,eACA,IAAAI,EAAAyD,OACAD,EAAA5E,KAAA2C,YAAA,QACAvB,EAAAyD,MAAA,EACAC,EAAAvB,MACG,IAAAnC,EAAAyD,QACHD,EAAA5E,KAAA2C,YAAA,UACAvB,EAAAyD,MAAA,EACAC,EAAArB,MAeA,SAAAqB,EAAAC,GACA,MAAAlB,EAAA,IAAAkB,EACA3D,EAAAkB,MAAA0C,IACA5D,EAAAkB,MAAA2C,MAAApB,GAbA5D,SAAAK,eAAA,QACA4E,OAgBA,IAAA9D,EAAAyD,OACA7B,EAAA,KACAA,EAAA,MAAAS,MACG,IAAArC,EAAAyD,QACH7B,EAAA,KACAA,EAAA,KAAAO,MAEAnC,EAAAJ,IAAA4B,WAAAC,OAAA,EAGA,SAAAmC,IAOA,OANA,IAAA9D,GACAiE,aACAC,SAAA,IACAC,SAAAb,EACAc,SAAAX,IA5PAxD,EAAAoE,gBAAA,WACAnE,EAAAf,OA2JA,WACA,MAYAmF,EAAA5E,GAZA,wEAYAlB,GACA+F,EAAA7E,GAVA,kBACA,kBACA,oBACA,oBACA,aACA,QACA,cAIAqD,EAAAvE,GAGA+F,EAAA/E,QAAAgF,KAAAvB,SAEA/C,EAAAG,SAAAiE,GACApE,EAAAG,SAAAkE,GApBA,GAzJA,MAAAE,EEWA,WAEA,MAAAC,EAAA1H,OAAAY,OAAA,MA0BA,OAxBA8G,EAAAC,UAAA,SAAAhG,EAAAC,EAAA6B,GAEA5B,KAAAC,KAAAC,SAAAK,eAAAT,GAEAE,KAAA+F,UAAAhG,EAEAC,KAAA4B,OAEAoE,MAAAC,QAAArE,KACA5B,KAAA4B,KAAAzD,OAAA+H,UAAkCtE,KAGlCiE,EAAAM,SAAA,SAAAxE,EAAAyE,GAGApG,KAAAqG,UAAA1E,EAAA1C,KAAAe,KAAAC,KAAAD,KAAA4B,MAEA5B,KAAAsG,aAAAF,EACApG,KAAAC,KAAAsG,iBAAAvG,KAAA+F,UAAA/F,KAAAqG,UAAArG,KAAAsG,eAEAT,EAAAW,YAAA,WAEAxG,KAAAC,KAAAwG,oBAAAzG,KAAA+F,UAAA/F,KAAAqG,UAAArG,KAAAsG,eAEAT,EA5BA,GFVAD,EAAAE,UAAA,wBAAmDY,MAAA,YACnDd,EAAAO,SAGA,SAAAvE,EAAAlC,GAEA,MAAAU,EEqDA,SAAAV,EAAAgH,GACA,IAAAC,EAAA,MAEA,GAAAjH,EAAAkH,SAAAlH,EAAAmH,cAAA,CAEA,GAAAH,EAAAI,QAAApH,EAAAkH,OAAAG,UAAA,EACA,OAAArH,EAAAkH,OAAAxG,GAEAuG,EAtBA,SAAAjH,EAAAgH,GAIA,MAAAM,EAAAhB,MAAAiB,KAAAvH,EAAAwH,MACA,QAAAzJ,EAAA,EAAiBA,EAAAuJ,EAAAlF,OAAsBrE,GAAA,EACvC,GAAAiJ,EAAAI,QAAAE,EAAAvJ,GAAAsJ,UAAA,EAEA,OADAC,EAAAvJ,GAAA2C,GAPA,CAsBAV,EAAAgH,GAGA,OAAAC,EFhEAQ,CAAAzH,EAAAkC,EAAA8E,MACAlG,QAAAC,IAAAL,YACAA,GACAgB,EAAAgG,KAAAhH,KAPAiB,EAAAyD,OAAA,GAYA1D,EAAAgG,KAAA,SAAAhH,GACA,MAAAiH,EAAAhG,EAAAJ,IAAAb,GACA,IAAA4B,EAAA0B,IACA4D,EAAA9D,IAEA,eAAApD,EA6DA,SAAAa,GACA,MAAAoG,EAAApG,EACA,QAAAoG,EAAAvE,OAAA,CAEAzB,EAAAkB,MAAA0C,IACAoC,EAAAvE,OAAA,EACAzB,EAAAJ,IAAA8B,WAAA9C,KAAA+C,UAAA,sBACA,MAAAuE,EAkDA,WACA,MAAA3D,EAAA1B,IACAqF,EAAAlG,EAAAkB,MAAAiF,SAAA5D,GAKA,OADAX,EAAA,GADA,GAAA5B,EAAAJ,IAAA,kBAAAhB,KAAA2C,aAEA2E,EAPA,GAjDAlG,EAAAkB,MAAA2C,MAAAqC,GACAlG,EAAAyD,MAAA,OACG,IAAAuC,EAAAvE,QAEHuE,EAAAvE,OAAA,EACAzB,EAAAkB,MAAAE,QACApB,EAAAJ,IAAA8B,WAAA9C,KAAA+C,UAAA,qBACA,IAAA3B,EAAAyD,MACA5B,EAAAQ,KACK,IAAArC,EAAAyD,OACL5B,EAAAM,OAIA6D,EAAAvE,OAAA,EAEAzB,EAAAkB,MAAAE,QACApB,EAAAJ,IAAA8B,WAAA9C,KAAA+C,UAAA,sBACAC,EAAA,QAAA5B,EAAAkB,MAAAa,aA1BA,CA5DAiE,GACG,sBAAAjH,GAEHmD,EADAvB,EAAAG,EAAAH,IAEAD,IACAO,KACG,sBAAAlC,GAEHmD,EADAvB,EAAAK,EAAAL,IAEAD,IACAO,KACG,oBAAAlC,EAEHiD,EADAiE,EAAAnF,EAAAmF,IAEG,oBAAAlH,EAEHiD,EADAiE,EAAAjF,EAAAiF,IAEG,UAAAlH,IACHkC,IACAiB,EAAA,IACAxB,IACAsB,EAAA,KAgOAnD,SAAAuH,mBAAA,WACA,aAAAvH,SAAAwH,YAIAtG,EAAAoE,oCG/RA,IAAAmC,EAAAC,EAOAC,KAAAC,IAAAD,KAAAC,KAAA,WAAmC,WAAAD,MAGnC,mBAAAE,SAAAzI,UAAAL,OACA8I,SAAAzI,UAAAL,KAAA,SAAA+I,GACA,IAAApG,EAAAoE,MAAA1G,UAAA2I,MAAArK,KAAAsK,UAAA,GACAC,EAAAnI,KACA,kBAEA,OADA4B,EAAAV,KAAAkH,MAAAxG,EAAAsG,WACAC,EAAAC,MAAAJ,EAAApG,gBAOAgG,EAAA,mBAAAD,EAMC,WAMD,SAAAU,IAGA,GAFArI,KAAA8D,MAAA9D,KAAAqF,SAEArF,KAAAoF,WAAApF,KAAAsI,YAAAtI,KAAA8D,KAAA,EAMA,OALA9D,KAAAoD,WAAA,EACApD,KAAAuI,MACAvI,KAAAsF,SAAAtF,MACAwI,aAAAxI,KAAAyI,cACAzI,KAAAuF,SAAAvF,MAGAA,KAAAsF,SAAAtF,MAGA,IAAA0I,EAAAb,KAAAC,MAAA9H,KAAA2I,WAAA3I,KAAA8D,KACA8E,EAAAF,EAAA,EAAA1I,KAAAqF,SAAAqD,EAAA1I,KAAAqF,SAEAuD,GAAA,GACA5I,KAAA6I,aAAAC,KAAAC,MAAAD,KAAAE,IAAAJ,GAAA5I,KAAAqF,UACArF,KAAA8D,MAAA9D,KAAA6I,aAAA7I,KAAAqF,SAEArF,KAAAuI,IACAF,EAAAzK,KAAAoC,OAEKA,KAAAuI,KACLvI,KAAAyI,QAAAQ,WAAAZ,EAAApJ,KAAAe,MAAA4I,IAOA,SAAAM,EAAAC,GACAnJ,KAAAsI,YAAAa,EACAnJ,KAAA2I,WAAAd,KAAAC,MACA9H,KAAA8D,KAAA,EACA9D,KAAAuI,MACAF,EAAAzK,KAAAoC,MAMA,SAAAoJ,EAAAC,GACArJ,KAAA2I,WAAAU,GAAAxB,KAAAC,MACA9H,KAAA8D,KAAA,EACA9D,KAAAuI,MACAF,EAAAzK,KAAAoC,MAGA,IAAAsJ,EAAA,qBACAC,EAAA,sBACAC,EAAA,uCAQAC,EAAA,+EAEAtI,EAAA,SAAAiF,GAGA,GAFAA,UAEApG,gBAAAmB,GAAA,WAAAA,EAAAiF,GAEAjF,EAAAuI,WAAAvI,EAAAuI,WAAA,KAEA1J,KAAAuI,MACAvI,KAAAyI,QAAA,KACAzI,KAAA6I,aAAA,KACA7I,KAAAqF,SAAAe,EAAAf,UAAA,GACArF,KAAAoF,UAAAgB,EAAAhB,cACApF,KAAA2I,WAAA,EACA3I,KAAA2J,WAAA,EACA3J,KAAAoD,WAAA,EACApD,KAAAsI,YAAA,EACAtI,KAAA8D,KAAA,EACA9D,KAAAsF,SAAAc,EAAAd,UAAA,aACAtF,KAAAuF,SAAAa,EAAAb,UAAA,cA0NA,OApNApE,EAAA7B,UAAAsK,MAAA,WACA,GAAA5J,KAAAoF,UACA,SAGApF,KAAA2C,OACA3C,KAAA2I,WAAA,EACA3I,KAAA8D,KAAA,GAaA3C,EAAA7B,UAAA4F,MAAA,SAAApB,GACA,GAAA9D,KAAAuI,GAAA,SAEAzE,IAAA9D,KAAAwH,SAAA1D,GAAA,EAEA9D,KAAA2I,WAAA7E,EACA9D,KAAA2J,WAAA,EAEA3J,KAAAoF,UACA8D,EAAAtL,KAAAoC,KAAA8D,GAEAsF,EAAAxL,KAAAoC,KAAA6H,KAAAC,MAAAhE,IAOA3C,EAAA7B,UAAAqD,KAAA,WACA3C,KAAA2J,WAAA3J,KAAA2E,MACA3E,KAAAuI,MAEAC,aAAAxI,KAAAyI,SAEAzI,KAAAoF,UACApF,KAAAoD,WAAApD,KAAAsI,YAAAtI,KAAA8D,KAEA9D,KAAAoD,WAAAyE,KAAAC,MAAA9H,KAAA2I,YAOAxH,EAAA7B,UAAAmD,MAAA,WACAzC,KAAAuI,IACAvI,KAAA2J,WAAA3J,KAAA2E,MACA3E,KAAA2C,QAEA3C,KAAA2J,aACA3J,KAAAoF,UACA8D,EAAAtL,KAAAoC,UAAA2J,YAEAP,EAAAxL,KAAAoC,KAAA6H,KAAAC,MAAA9H,KAAA2J,YAGA3J,KAAA2J,WAAA,IAUAxI,EAAA7B,UAAAqF,IAAA,WACA,OAAA3E,KAAAuI,GAGAvI,KAAAoF,UACApF,KAAAsI,aAAAT,KAAAC,MAAA9H,KAAA2I,YAEAd,KAAAC,MAAA9H,KAAA2I,WAMA3I,KAAA2J,YAAA3J,KAAAoD,YAQAjC,EAAA7B,UAAAuK,SAAA,SAAAC,GACA,IAAAC,EAAA/J,KAAAgK,QAAAF,EAjIA,IAiIA,GACAG,EAAAjK,KAAAgK,QAAAlB,KAAAC,MAAAe,EAlIA,IAkIA,OAGA,OAFA9J,KAAAgK,QAAAlB,KAAAC,MAAAe,EApIA,IAoIA,OAEA,IAAAG,EAAA,IAAAF,GAUA5I,EAAA7B,UAAA0K,QAAA,SAAAE,EAAApI,GAGA,IAFAoI,IAAAC,WAEAD,EAAApI,UACAoI,EAAA,IAAAA,EAGA,OAAAA,GASA/I,EAAA7B,UAAAoF,aAAA,SAAAoF,EAAAM,GACA,IAAAH,EAAAjK,KAAAgK,QAAAlB,KAAAC,MAAAe,EAhKA,IAgKA,OACAO,EAAArK,KAAAgK,QAAAlB,KAAAC,MAAAe,EAlKA,IAkKA,OAIA,OAHA9J,KAAAgK,QAAAlB,KAAAC,MAAAe,EApKA,MAoKA,GAGA,IAAAO,EAAA,IAAAJ,GAFAG,EAAA,IAAApK,KAAAgK,QAAAlB,KAAAC,MAAAe,EAnKA,KAmKA,QAiBA3I,EAAA7B,UAAAkI,SAAA,SAAA1D,GAEA,GAAAwF,EAAAgB,KAAAC,OAAAzG,IACA,OAAAA,EAGA,IAAAgG,EACAU,EACAC,EACAC,EACA5C,EAAA,IAAAD,KAkDA,OAhDA0B,EAAAe,KAAAxG,IACA0G,EAAA1G,EAAA6G,MAAA,KACAb,EAnMA,IAmMArG,SAAA+G,EAAA,OACAV,GAnMA,IAmMArG,SAAA+G,EAAA,SAEAC,EAAA3G,EAAA2G,MAAAjB,IAGA,GAAAiB,EAAA,GAAA3I,QAAA2B,SAAAgH,EAAA,WACAX,EA1MA,IA0MArG,SAAAgH,EAAA,OACAX,GA1MA,IA0MArG,SAAAgH,EAAA,OACAX,GAAArG,SAAAgH,EAAA,SAEAX,EA/MA,KA+MArG,SAAAgH,EAAA,OACAX,GA/MA,IA+MArG,SAAAgH,EAAA,OACAX,GA/MA,IA+MArG,SAAAgH,EAAA,QAEOhB,EAAAa,KAAAxG,IACP4G,EAAA,IAAA7C,KACAC,EAAA,IAAAD,KAEA4C,EAAA3G,EAAA2G,MAAAhB,GAEAiB,EAAAE,QAAAH,EAAA,IACAC,EAAAG,SAAAJ,EAAA,IACAC,EAAAI,QAAAL,EAAA,IACAC,EAAAK,SAAAN,EAAA,IACAC,EAAAM,WAAAP,EAAA,IACAC,EAAAO,WAAAR,EAAA,aAEAA,EAAA,IACAC,EAAAQ,gBAAAT,EAAA,IAGAX,EAAAhB,KAAAqC,IAAA,EAAAT,EAAAU,UAAAtD,EAAAsD,aAGAtD,EAAA,IAAAD,KACAiC,EAAAjC,KAAAwD,MAAAvH,GAKAgG,EAHAwB,MAAAxB,GAGA,EAFAhB,KAAAqC,IAAA,EAAArB,EAAAhC,EAAAsD,YAOAtB,GAGA3I,IAtTAwG,EAAA/J,KAAAL,EAAAF,EAAAE,EAAAC,GAAAmK,KAAAnK,EAAAD,QAAAqK","file":"app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// ======================================================================\r\n// Element Delegator\r\n// ======================================================================\r\n\r\nexport function ElementDelegator(proto = null) {\r\n  // This is the base Delegator \"Class\" for a element\r\n  // By default does not inherirt the proto chain from another object\r\n  const Element = Object.create(proto);\r\n  // Use \"create\" for creating a new element\r\n  Element.create = function create(elemId, type) {\r\n    this.elem = document.createElement(type);\r\n    this.elem.id = elemId;\r\n    this.id = elemId;\r\n    Element.gc([\"init\", \"create\"]);\r\n  };\r\n  // Use \"init\" when working with an existing element\r\n  Element.init = function init(elemId) {\r\n    this.id = elemId;\r\n    this.elem = document.getElementById(this.id);\r\n    if (this.elem === null) {\r\n      console.log(`Init Error: No element with id \"${this.id}\"`);\r\n    }\r\n    // After creation garbage collected init/create\r\n    Element.gc([\"init\", \"create\"]);\r\n  };\r\n  // Garbage Collect\r\n  Element.gc = function gc(items) {\r\n    items.forEach(item => {\r\n      delete Element[item];\r\n    });\r\n    // Delete gc itself\r\n    delete Element.gc;\r\n  };\r\n  return Element;\r\n}\r\n\r\n// ======================================================================\r\n// Delegated Element Utilities\r\n// ======================================================================\r\n\r\nexport function initElemObjects(ids, delegator, proto = null) {\r\n  // Used for quickly initiating Element delegated objects\r\n  // Can accept another proto delegator\r\n  const objs = [];\r\n  let obj;\r\n  ids.forEach(id => {\r\n    if (proto === null) {\r\n      obj = delegator();\r\n    } else {\r\n      obj = delegator(proto());\r\n    }\r\n    obj.init(id);\r\n    objs.push(obj);\r\n  });\r\n  return objs;\r\n}\r\n\r\nexport function FragmentDelegator(proto = null) {\r\n  const Fragment = Object.create(proto);\r\n\r\n  Fragment.initFragment = function initFragment() {\r\n    this.fragment = document.createDocumentFragment();\r\n  };\r\n  Fragment.addNodes = function addNodes(items) {\r\n    items.forEach(item => this.fragment.appendChild(item.elem));\r\n  };\r\n  return Fragment;\r\n}\r\n","\"use strict\";\r\n\r\nimport css_ from \"../css/styles.css\";\r\nimport { EventDelegator, getTargetId } from \"./olooEvent\";\r\nimport { SubscribersDelegator } from \"./olooObserver\";\r\nimport { ElementDelegator, initElemObjects } from \"./olooElem\";\r\n\r\nconst Tock = require(\"tocktimer\");\r\n\r\nconst myBase = Object.create(null);\r\n\r\nconst myApp = SubscribersDelegator();\r\n\r\nmyBase.initApplication = function init() {\r\n  myApp.init();\r\n  addElements();\r\n  const eventSandbox = EventDelegator();\r\n  eventSandbox.initEvent(\"eventSandbox\", \"click\", { tags: [\"BUTTON\"] });\r\n  eventSandbox.addEvent(eventController);\r\n  myApp.state = -1;\r\n\r\n  function eventController(args, e) {\r\n    // Only Passes events of with tagNames defined in the array\r\n    const id = getTargetId(e, args.tags);\r\n    console.log(id);\r\n    if (id !== undefined) {\r\n      myBase.main(id);\r\n    }\r\n  }\r\n};\r\n\r\nmyBase.main = function main(id) {\r\n  const self = myApp.obj[id];\r\n  let num = getSessionLength();\r\n  let numBreak = getBreakLength();\r\n\r\n  if (id === \"start_stop\") {\r\n    startStop(self);\r\n  } else if (id === \"session-increment\") {\r\n    num = upperLimit(num);\r\n    setSessionLength(num);\r\n    formattedDisplayTime(num);\r\n    reset();\r\n  } else if (id === \"session-decrement\") {\r\n    num = lowerLimit(num);\r\n    setSessionLength(num);\r\n    formattedDisplayTime(num);\r\n    reset(num);\r\n  } else if (id === \"break-increment\") {\r\n    numBreak = upperLimit(numBreak);\r\n    setBreakLength(numBreak);\r\n  } else if (id === \"break-decrement\") {\r\n    numBreak = lowerLimit(numBreak);\r\n    setBreakLength(numBreak);\r\n  } else if (id === \"reset\") {\r\n    reset();\r\n    setSessionLength(25);\r\n    formattedDisplayTime(25);\r\n    setBreakLength(5);\r\n  }\r\n};\r\n\r\nfunction formattedDisplayTime(num) {\r\n  const mmss = getformatSessionLength(num);\r\n  displayTime(mmss);\r\n}\r\n\r\nfunction upperLimit(num) {\r\n  let limit = num;\r\n  if (limit >= 60) {\r\n    return limit;\r\n  }\r\n  limit += 1;\r\n  return limit;\r\n}\r\n\r\nfunction lowerLimit(num) {\r\n  let limit = num;\r\n  if (limit <= 1) {\r\n    return limit;\r\n  }\r\n  limit -= 1;\r\n  return limit;\r\n}\r\n\r\nfunction reset() {\r\n  if (myApp.timer !== undefined) {\r\n    resetBeep();\r\n    myApp.timer.stop();\r\n    myApp.obj[\"time-left\"].elem.textContent = getformatSessionLength();\r\n    const startBtn = myApp.obj[\"start_stop\"];\r\n    startBtn.toggle = -1;\r\n    myApp.obj[\"action_sym\"].elem.className = \"fas fa-play-circle\";\r\n    clockDial(0, 0);\r\n  }\r\n}\r\n\r\nfunction startStop(obj) {\r\n  const self = obj;\r\n  if (self.toggle === -1) {\r\n    // Init Start\r\n    myApp.timer = getTimer();\r\n    self.toggle = 1;\r\n    myApp.obj[\"action_sym\"].elem.className = \"fas fa-pause-circle\";\r\n    const startTime = timer();\r\n    myApp.timer.start(startTime);\r\n    myApp.state = 1;\r\n  } else if (self.toggle === 1) {\r\n    // Pause\r\n    self.toggle = 0;\r\n    myApp.timer.pause();\r\n    myApp.obj[\"action_sym\"].elem.className = \"fas fa-play-circle\";\r\n    if (myApp.state === 1) {\r\n      posClock(getSessionLength());\r\n    } else if (myApp.state === 0) {\r\n      posClock(getBreakLength());\r\n    }\r\n  } else {\r\n    // Start\r\n    self.toggle = 1;\r\n    // Unpause\r\n    myApp.timer.pause();\r\n    myApp.obj[\"action_sym\"].elem.className = \"fas fa-pause-circle\";\r\n    clockDial(60, myApp.timer.final_time * 0.001);\r\n  }\r\n}\r\n\r\nfunction posClock(timeLength) {\r\n  const pausedTime = myApp.timer.final_time * 0.001;\r\n  const x = pausedTime / 60;\r\n  const b = timeLength - x;\r\n  const c = timeLength / b;\r\n  const d = 60 / c;\r\n  clockDial(d, 0);\r\n}\r\n\r\nfunction setBreakLength(breakNum) {\r\n  myApp.obj[\"break-length\"].elem.textContent = breakNum;\r\n}\r\n\r\nfunction setSessionLength(num) {\r\n  myApp.obj[\"session-length\"].elem.textContent = num;\r\n}\r\n\r\nfunction getBreakLength() {\r\n  const sessionAsStr = parseInt(myApp.obj[\"break-length\"].elem.textContent, 10);\r\n  return sessionAsStr;\r\n}\r\n\r\nfunction getSessionLength() {\r\n  const sessionAsStr = parseInt(myApp.obj[\"session-length\"].elem.textContent, 10);\r\n  return sessionAsStr;\r\n}\r\n\r\nfunction timer() {\r\n  const session = getformatSessionLength();\r\n  const startTime = myApp.timer.timeToMS(session);\r\n\r\n  // Get the time in mins and convert to seconds\r\n  const sessionLengthSecs = myApp.obj[\"session-length\"].elem.textContent * 60;\r\n  clockDial(60, sessionLengthSecs);\r\n  return startTime;\r\n}\r\n\r\nfunction clockDial(clock, session) {\r\n  setClockDisplay(clock);\r\n  setTimeDuration(session);\r\n}\r\n\r\nfunction addElements() {\r\n  const labelIds = [\"timer-label\", \"break-length\", \"session-length\", \"time-left\", \"circleTime\"];\r\n\r\n  const btnIds = [\r\n    \"break-decrement\",\r\n    \"break-increment\",\r\n    \"session-decrement\",\r\n    \"session-increment\",\r\n    \"start_stop\",\r\n    \"reset\",\r\n    \"action_sym\"\r\n  ];\r\n\r\n  const labels = initElemObjects(labelIds, ElementDelegator);\r\n  const buttons = initElemObjects(btnIds, ButtonDelegator, ElementDelegator);\r\n\r\n  // Run the setup function on each button\r\n  buttons.forEach(btn => btn.setup());\r\n\r\n  myApp.addItems(labels);\r\n  myApp.addItems(buttons);\r\n}\r\n\r\nfunction ButtonDelegator(proto = null) {\r\n  const Button = Object.create(proto);\r\n\r\n  Button.setup = function setup() {\r\n    this.toggle = -1;\r\n  };\r\n  return Button;\r\n}\r\n\r\nfunction getformatSessionLength() {\r\n  const sessionAsStr = getSessionLength();\r\n  return `${sessionAsStr}:00`;\r\n}\r\n\r\nfunction displayTime(timeMMSS) {\r\n  const str = `${timeMMSS}`;\r\n  const pad = \"00000\";\r\n  const formatted = pad.substring(0, pad.length - str.length) + str;\r\n  myApp.obj[\"time-left\"].elem.textContent = formatted;\r\n}\r\n\r\nfunction updateTime() {\r\n  const currentTime = myApp.timer.msToTimecode(myApp.timer.lap());\r\n  const timeMMSS = currentTime.substring(3, 8);\r\n  displayTime(timeMMSS);\r\n}\r\n\r\nfunction switchSession() {\r\n  const timerLbl = myApp.obj[\"timer-label\"];\r\n  if (myApp.state === 1) {\r\n    timerLbl.elem.textContent = \"Break\";\r\n    myApp.state = 0;\r\n    initNewTimer(getBreakLength());\r\n  } else if (myApp.state === 0) {\r\n    timerLbl.elem.textContent = \"Session\";\r\n    myApp.state = 1;\r\n    initNewTimer(getSessionLength());\r\n  }\r\n}\r\n\r\nfunction playBeep() {\r\n  const beep = document.getElementById(\"beep\");\r\n  beep.play();\r\n}\r\n\r\nfunction resetBeep() {\r\n  const beep = document.getElementById(\"beep\");\r\n  beep.pause();\r\n  beep.currentTime = 0;\r\n}\r\n\r\nfunction initNewTimer(timelength) {\r\n  const time = timelength * 60000;\r\n  myApp.timer = getTimer();\r\n  myApp.timer.start(time);\r\n\r\n  playBeep();\r\n\r\n  if (myApp.state === 1) {\r\n    clockDial(0, 0);\r\n    clockDial(60, getSessionLength() * 60);\r\n  } else if (myApp.state === 0) {\r\n    clockDial(0, 0);\r\n    clockDial(0, getBreakLength() * 60);\r\n  }\r\n  myApp.obj[\"start_stop\"].toggle = 1;\r\n}\r\n\r\nfunction getTimer() {\r\n  const newTimer = new Tock({\r\n    countdown: true,\r\n    interval: 250,\r\n    callback: updateTime,\r\n    complete: switchSession\r\n  });\r\n  return newTimer;\r\n}\r\n\r\nfunction setClockDisplay(pos) {\r\n  // Range 0 - 60, 15 is a quarter\r\n  document.documentElement.style.setProperty(\"--pos\", `${pos}vmin`);\r\n}\r\n\r\nfunction setTimeDuration(time) {\r\n  // in seconds\r\n  document.documentElement.style.setProperty(\"--time\", `${time}s`);\r\n}\r\n\r\n// ======================================================================\r\n// Handler when the DOM is fully loaded\r\ndocument.onreadystatechange = function onreadystatechange() {\r\n  if (document.readyState === \"complete\") {\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n      console.log(\"*** RUNNING IN DEV MODE! ***\");\r\n    }\r\n    myBase.initApplication();\r\n  } else {\r\n    // Do something during loading (optional)\r\n  }\r\n};\r\n// ======================================================================\r\n","// ======================================================================\r\n// Observer Delegator Pattern\r\n// ======================================================================\r\n\r\nexport function SubscribersDelegator() {\r\n  const Subscribe = Object.create(null);\r\n\r\n  Subscribe.init = function init() {\r\n    this.obj = Object.create(null);\r\n    delete Subscribe.init;\r\n  };\r\n  Subscribe.subscribe = function subscribe(item) {\r\n    this.obj[item.id] = item;\r\n  };\r\n  // Use addItems when you want to subscribe many items\r\n  Subscribe.addItems = function addItems(items) {\r\n    items.forEach(item => Subscribe.subscribe(item));\r\n  };\r\n  Subscribe.unsubscribe = function unsubscribe(items) {\r\n    // Can unsubscribe one observer, or an array of observers\r\n    if (typeof items === \"string\") {\r\n      const item = items;\r\n      delete this.obj[item];\r\n    } else {\r\n      items.forEach(key => delete this.obj[key]);\r\n    }\r\n  };\r\n  Subscribe.broadcast = function broadcast(func, ...args) {\r\n    // On each object called func\r\n    // Any additional args will get passed into the func\r\n    // define them just using comma seperator\r\n    const keys = Object.keys(this.obj);\r\n    for (let i = 0; i < keys.length; i += 1) {\r\n      this.obj[keys[i]][func](...args);\r\n    }\r\n  };\r\n  return Subscribe;\r\n}\r\n\r\n// ======================================================================\r\n// Observer Delegator Utilities\r\n// ======================================================================\r\n\r\nexport function createObserversById(subscriber, ids, delegator) {\r\n  ids.forEach(elemId => {\r\n    const elem = document.getElementById(elemId);\r\n    const observer = delegator();\r\n    observer.init(elemId, elem);\r\n    subscriber.subscribe(observer);\r\n  });\r\n}\r\n","// ======================================================================\r\n// OOLO Event Sandbox Delegator Utilities\r\n//\r\n// Creating a new sandbox based on element ID's\r\n//\r\n// Import Script\r\n// import { EventDelegator, getTargetId } from \"./olooEvent\";\r\n//\r\n// # Instantiate Delegator\r\n//  const eventSandbox = EventDelegator();\r\n// # Define Element by ID to attached Event sandbox to, types of event, and on what tags\r\n//  eventSandbox.initEvent(\"eventSandbox\", \"click\", { tags: [\"BUTTON\"] });\r\n//  For more Event types see: https://developer.mozilla.org/en-US/docs/Web/Events\r\n// # Call a function to handle the events ex. EventController Handles all events within the Event sandbox\r\n//    Note: EventController is just a function that's called\r\n//  eventSandbox.addEvent(eventController);\r\n//\r\n// Example Event Controller\r\n// function eventController(args, e) {\r\n//   // Only Passes events of with tagNames defined in the array\r\n//   const id = getTargetId(e, args.tags);\r\n//   if (id !== undefined) {\r\n//     const obj = myApp.elems[id];\r\n//   }\r\n// }\r\n// ======================================================================\r\n\r\nexport function EventDelegator() {\r\n  // Creates an Event object on the element\r\n  const Event = Object.create(null);\r\n\r\n  Event.initEvent = function setup(elemId, type, args) {\r\n    // The Element to bind the event handler too\r\n    this.elem = document.getElementById(elemId);\r\n    // The type of event ex: \"click\"\r\n    this.eventType = type;\r\n    // Additional arguments that will be passed to the bound function as an object\r\n    this.args = args;\r\n    // Helper: If Array convert to object\r\n    if (Array.isArray(args)) {\r\n      this.args = Object.assign({}, args);\r\n    }\r\n  };\r\n  Event.addEvent = function add(func, options) {\r\n    // func: Bound an Function to an Event\r\n    // (options): Optional parameter for passing options to event listener ex: \"once: true\"\r\n    this.boundFunc = func.bind(this.elem, this.args);\r\n    // this.bound prevents binding loss for arguments and options\r\n    this.boundOptions = options;\r\n    this.elem.addEventListener(this.eventType, this.boundFunc, this.boundOptions);\r\n  };\r\n  Event.removeEvent = function remove() {\r\n    // Remove the listener, do not have to pass the \"options\" since it is bound\r\n    this.elem.removeEventListener(this.eventType, this.boundFunc, this.boundOptions);\r\n  };\r\n  return Event;\r\n}\r\n\r\n// ======================================================================\r\n// Event Utilities\r\n// ======================================================================\r\n\r\nfunction lookupPathForId(e, tags) {\r\n  let findId;\r\n  // If Id is not found on the target,\r\n  // lookup the path chain for the nearest id that matches the tag types\r\n  const pathArray = Array.from(e.path);\r\n  for (let i = 0; i < pathArray.length; i += 1) {\r\n    if (tags.indexOf(pathArray[i].tagName) > -1) {\r\n      findId = pathArray[i].id;\r\n      return findId;\r\n    }\r\n  }\r\n  return undefined;\r\n}\r\n\r\nexport function getTargetId(e, tags) {\r\n  let lookupId = \"bbb\";\r\n  // Prevents events triggering on the parent element\r\n  if (e.target !== e.currentTarget) {\r\n    // Returns the target ID of event for allowed tags Ex: DIV, BUTTON etc.\r\n    if (tags.indexOf(e.target.tagName) > -1) {\r\n      return e.target.id;\r\n    }\r\n    lookupId = lookupPathForId(e, tags);\r\n  }\r\n  // Returns undefined if no target match by ID or up the path chain\r\n  return lookupId;\r\n}\r\n","/**\n* Tock by Mr Chimp - github.com/mrchimp/tock\n* Based on code by James Edwards:\n*    sitepoint.com/creating-accurate-timers-in-javascript/\n*/\n\n// Implements Date.now() for ie lt 9\nDate.now = Date.now || function() { return +new Date(); };\n\n// Polyfills Function.prototype.bind for IE lt 9 and Safari lt 5.1\nif ( typeof Function.prototype.bind != 'function' ) {\n    Function.prototype.bind = function (ctx) {\n        var args = Array.prototype.slice.call(arguments, 1),\n            fn = this;\n        return function () {\n            args.push.apply(args, arguments);\n            return fn.apply(ctx, args);\n        };\n    };\n}\n\n(function (root, factory) {\n  if ( typeof define === 'function' && define.amd ) {\n    define(factory);\n  } else if ( typeof exports === 'object' ) {\n    module.exports = factory();\n  } else {\n    root.Tock = factory();\n  }\n}(this, function () {\n\n  /**\n   * Called every tick for countdown clocks.\n   * i.e. once every this.interval ms\n   */\n  function _tick () {\n    this.time += this.interval;\n\n    if ( this.countdown && (this.duration_ms - this.time < 0) ) {\n      this.final_time = 0;\n      this.go = false;\n      this.callback(this);\n      clearTimeout(this.timeout);\n      this.complete(this);\n      return;\n    } else {\n      this.callback(this);\n    }\n\n    var diff = (Date.now() - this.start_time) - this.time,\n        next_interval_in = diff > 0 ? this.interval - diff : this.interval;\n\n    if ( next_interval_in <= 0 ) {\n      this.missed_ticks = Math.floor(Math.abs(next_interval_in) / this.interval);\n      this.time += this.missed_ticks * this.interval;\n\n      if ( this.go ) {\n        _tick.call(this);\n      }\n    } else if ( this.go ) {\n      this.timeout = setTimeout(_tick.bind(this), next_interval_in);\n    }\n  }\n\n  /**\n   * Called by Tock internally - use start() instead\n   */\n  function _startCountdown (duration) {\n    this.duration_ms = duration;\n    this.start_time = Date.now();\n    this.time = 0;\n    this.go = true;\n    _tick.call(this);\n  }\n\n  /**\n   * Called by Tock internally - use start() instead\n   */\n  function _startTimer (start_offset) {\n    this.start_time = start_offset || Date.now();\n    this.time = 0;\n    this.go = true;\n    _tick.call(this);\n  }\n\n  var MILLISECONDS_RE           = /^\\s*(\\+|-)?\\d+\\s*$/,\n      MM_SS_RE                  = /^(\\d{1,2}):(\\d{2})$/,\n      MM_SS_ms_OR_HH_MM_SS_RE   = /^(\\d{1,2}):(\\d{2})(?::|\\.)(\\d{2,3})$/,\n      MS_PER_HOUR               = 3600000,\n      MS_PER_MIN                = 60000,\n      MS_PER_SEC                = 1000,\n      /* The RegExp below will match a date in format `yyyy-mm-dd HH:MM:SS` and optionally with `.ms` at the end.\n       * It will also match ISO date string, i.e. if the whitespace separator in the middle is replaced with a `T`\n       * and the date string is also suffixed with a `Z` denoting UTC timezone.\n       */\n      yyyy_mm_dd_HH_MM_SS_ms_RE = /^(\\d{4})-([0-1]\\d)-([0-3]\\d)(?:\\s|T)(\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d{3})Z?)?$/;\n\n  var Tock = function (options) {\n    options = options || {};\n\n    if ( ! (this instanceof Tock) ) return new Tock(options);\n\n    Tock.instances = (Tock.instances || 0) + 1;\n\n    this.go           = false;\n    this.timeout      = null;\n    this.missed_ticks = null;\n    this.interval     = options.interval || 10;\n    this.countdown    = options.countdown || false;\n    this.start_time   = 0;\n    this.pause_time   = 0;\n    this.final_time   = 0;\n    this.duration_ms  = 0;\n    this.time         = 0;\n    this.callback     = options.callback || function () {};\n    this.complete     = options.complete || function () {};\n  };\n\n  /**\n   * Reset the clock\n   */\n  Tock.prototype.reset = function () {\n    if ( this.countdown ) {\n      return false;\n    }\n\n    this.stop();\n    this.start_time = 0;\n    this.time = 0;\n  };\n\n  /**\n   * Start the clock.\n   * @param {Various} time Accepts a single \"time\" argument\n   *   which can be in various forms:\n   *   - MM:SS\n   *   - MM:SS:ms or MM:SS.ms\n   *   - HH:MM:SS\n   *   - yyyy-mm-dd HH:MM:SS.ms\n   *   - milliseconds\n   */\n  Tock.prototype.start = function (time) {\n    if (this.go) return false;\n\n    time = time ? this.timeToMS(time) : 0;\n\n    this.start_time = time;\n    this.pause_time = 0;\n\n    if ( this.countdown ) {\n      _startCountdown.call(this, time);\n    } else {\n      _startTimer.call(this, Date.now() - time);\n    }\n  };\n\n  /**\n   * Stop the clock and clear the timeout\n   */\n  Tock.prototype.stop = function () {\n    this.pause_time = this.lap();\n    this.go = false;\n\n    clearTimeout(this.timeout);\n\n    if ( this.countdown ) {\n      this.final_time = this.duration_ms - this.time;\n    } else {\n      this.final_time = (Date.now() - this.start_time);\n    }\n  };\n\n  /**\n   * Stop/start the clock.\n   */\n  Tock.prototype.pause = function () {\n    if ( this.go ) {\n      this.pause_time = this.lap();\n      this.stop();\n    } else {\n      if ( this.pause_time ) {\n        if ( this.countdown ) {\n          _startCountdown.call(this, this.pause_time);\n        } else {\n          _startTimer.call(this, Date.now() - this.pause_time);\n        }\n\n        this.pause_time = 0;\n      }\n    }\n  };\n\n  /**\n   * Get the current clock time in ms.\n   * Use with Tock.msToTime() to make it look nice.\n   * @return {Integer} Number of milliseconds ellapsed/remaining\n   */\n  Tock.prototype.lap = function () {\n    if ( this.go ) {\n      var now;\n\n      if ( this.countdown ) {\n        now = this.duration_ms - (Date.now() - this.start_time);\n      } else {\n        now = (Date.now() - this.start_time);\n      }\n\n      return now;\n    }\n\n    return this.pause_time || this.final_time;\n  };\n\n  /**\n   * Format milliseconds as a MM:SS.ms string.\n   * @param  {Integer} ms Number of milliseconds\n   * @return {String}     String representation of ms in format MM:SS:ms\n   */\n  Tock.prototype.msToTime = function (ms) {\n    var milliseconds = this.zeroPad(ms % MS_PER_SEC, 3),\n        seconds = this.zeroPad(Math.floor((ms / MS_PER_SEC) % 60), 2),\n        minutes = this.zeroPad(Math.floor((ms / (MS_PER_MIN)) % 60), 2);\n\n    return minutes + ':' + seconds + '.' + milliseconds;\n  };\n\n  /**\n   * Pad the left side of a string with zeros up to a given length. I\n   * considered using an NPM package for this but it's probably best not to.\n   * @param  {Various} input  Number to pad. Will be converted to string.\n   * @param  {Integer} length Desired string length\n   * @return {String}         Padding number\n   */\n  Tock.prototype.zeroPad = function (input, length) {\n    input = input.toString();\n\n    while ( input.length < length ) {\n      input = '0' + input;\n    }\n\n    return input;\n  };\n\n  /**\n   * Format milliseconds as HH:MM:SS or HH:MM:SS:mmm\n   * @param  {Integer} ms      Number of milliseconds\n   * @param  {Boolean} show_ms If true, include milliseconds in output\n   * @return {String}          Formatted timecode string\n   */\n  Tock.prototype.msToTimecode = function (ms, show_ms) {\n    var seconds  = this.zeroPad(Math.floor((ms / MS_PER_SEC) % 60), 2),\n        minutes  = this.zeroPad(Math.floor((ms / MS_PER_MIN) % 60), 2),\n        hours    = this.zeroPad(Math.floor((ms / MS_PER_HOUR)), 2),\n        millisec = (show_ms ? ':' + this.zeroPad(Math.floor(ms % MS_PER_SEC), 3) : '');\n\n    return hours + ':' + minutes + ':' + seconds + millisec;\n  };\n\n  /**\n   * Convert a time string to milliseconds\n   *\n   * Possible inputs:\n   * MM:SS\n   * MM:SS:ms or MM:SS.ms\n   * HH:MM:SS\n   * yyyy-mm-dd HH:MM:SS.ms\n   *\n   * A milliseconds input will return it back for safety\n   * If the input cannot be recognized then 0 is returned\n   */\n  Tock.prototype.timeToMS = function (time) {\n    // If input is milliseconds integer then return it back\n    if ( MILLISECONDS_RE.test(String(time)) ) {\n      return time;\n    }\n\n    var ms,\n        time_split,\n        match,\n        date,\n        now = new Date();\n\n    if ( MM_SS_RE.test(time) ) { // If MM:SS\n      time_split = time.split(':');\n      ms = parseInt(time_split[0], 10) * MS_PER_MIN;\n      ms += parseInt(time_split[1], 10) * MS_PER_SEC;\n    } else {\n      match = time.match(MM_SS_ms_OR_HH_MM_SS_RE);\n\n      if ( match ) {\n        if ( match[3].length == 3 || parseInt(match[3], 10) > 59 ) { // If MM:SS:ms or MM:SS.ms (e.g. 10:10:458 or 10:10.458)\n          ms = parseInt(match[1], 10) * MS_PER_MIN;\n          ms += parseInt(match[2], 10) * MS_PER_SEC;\n          ms += parseInt(match[3], 10);\n        } else { // Then it's HH:MM:SS\n          ms = parseInt(match[1], 10) * MS_PER_HOUR;\n          ms += parseInt(match[2], 10) * MS_PER_MIN;\n          ms += parseInt(match[3], 10) * MS_PER_SEC;\n        }\n      } else if ( yyyy_mm_dd_HH_MM_SS_ms_RE.test(time) ) { // If yyyy-mm-dd HH:MM:SS or yyyy-mm-dd HH:MM:SS.ms or yyyy-mm-ddTHH:MM:SS.msZ\n        date = new Date();\n        now = new Date();\n\n        match = time.match(yyyy_mm_dd_HH_MM_SS_ms_RE);\n\n        date.setYear(match[1]);\n        date.setMonth(match[2]);\n        date.setDate(match[3]);\n        date.setHours(match[4]);\n        date.setMinutes(match[5]);\n        date.setSeconds(match[6]);\n\n        if (typeof match[7] !== 'undefined') {\n          date.setMilliseconds(match[7]);\n        }\n\n        ms = Math.max(0, date.getTime() - now.getTime());\n      } else {\n        // Let's try it as a date string\n        now = new Date();\n        ms = Date.parse(time);\n\n        if ( !isNaN(ms) ) { // Looks ok\n          ms = Math.max(0, ms - now.getTime());\n        } else { // Could not recognize input, so start from 0\n          ms = 0;\n        }\n      }\n    }\n\n    return ms;\n  };\n\n  return Tock;\n}));\n"],"sourceRoot":""}